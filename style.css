/* ====== ベース ====== */
:root {
  --max-width: 980px;
}
body {
  font-family: system-ui, -apple-system, "Hiragino Sans", "Noto Sans JP", "Noto Sans JP", sans-serif;
  margin: 20px;
}
.wrapper {
  max-width: var(--max-width);
  margin: 0 auto;
}
h1 { font-size: 1.25rem; margin: 0 0 12px; }
.section-title { font-weight: 600; margin: 16px 0 8px; }

/* 共通テーブル */
table { border-collapse: collapse; width: 100%; }
th, td { border: 1px solid #ddd; padding: 8px 10px; text-align: left; }
th { background: #f7f7f7; }

/* コントロール（スマホで触りやすく） */
.controls {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 8px;
  align-items: center;
  margin: 8px 0 12px;
}
.controls .order {
  display: flex; gap: 10px; align-items: center; justify-content: flex-start;
  grid-column: 1 / -1;
}
select, button {
  padding: 10px 12px;
  font-size: 16px;
}
button { border: 1px solid #ccc; background: #fff; border-radius: 8px; }

/* ====== レイアウト切替 ====== */
/* PC（幅800px以上）: PCビュー表示、モバイルビュー非表示 */
@media (min-width: 800px) {
  #pc-view   { display: block; }
  #mobile-view { display: none; }
}

/* スマホ（幅799px以下）: モバイルビュー表示、PCビュー非表示 */
@media (max-width: 799px) {
  #pc-view   { display: none; }
  #mobile-view { display: block; }

  /* モバイル向け少し文字詰め */
  th, td { padding: 8px; }
  table { font-size: 15px; }
}

/* PCテーブル：ソート可能ヘッダと矢印 */
th.pc-sort { cursor: pointer; position: relative; }
th .pc-arrow { position: absolute; right: 8px; font-size: 0.8em; }

/* 順位列をコンパクトに中央寄せ */
td.rank, th:nth-child(1) {
  text-align: center;
  white-space: nowrap;
}

tbody tr:nth-child(odd) {
  background-color: #f9f9f9;
}

#mobile-container button.active {
  background-color: #007bff;
  color: white;
}

/* ▼ ソート矢印を表示するスタイル */
th.sortable {
  cursor: pointer;
  position: relative;
  padding-right: 1.2em; /* 矢印のスペース確保 */
}

th.sorted-asc::after,
th.sorted-desc::after {
  position: absolute;
  right: 0.3em;
  font-size: 0.8em;
}

th.sorted-asc::after {
  content: "▲";
}

th.sorted-desc::after {
  content: "▼";
}

function renderCards(data, criterion) {
  const wrap = document.getElementById('card-container');
  if (!data || data.length === 0) {
    wrap.innerHTML = `<div class="empty-state">該当する棋士がいません</div>`;
    return;
  }
  wrap.innerHTML = data.map(p => {
    const statusClass =
      p.status === '現役' ? 'pill-status' : 'pill-status retired';
    // 3つめの軸（カードでも見せたい要点）を選択
    const third =
      criterion === 'kishiNumber'    ? (p.noStr || '') :
      criterion === 'birthdate'      ? (p.birthStr || '') :
      criterion === 'currentAge'     ? (p.currentAgeParts ? formatYMD(p.currentAgeParts) : '') :
      criterion === 'ageAtPromotion' ? (p.promoAgeParts ? formatYMD(p.promoAgeParts) : '') :
                                       (p.dan || '');

    return `
      <article class="card">
        <div class="card-header">
          <div class="card-name">${p.name}</div>
          <div class="badge-dan">${p.dan || ''}</div>
          <div class="${statusClass}">${p.status}</div>
        </div>
        <div class="card-body">
          <div class="card-meta">棋士番号：${p.noStr || '-'}</div>
          <div>${labelMap[criterion || 'dan'] || '段位'}：${third || '-'}</div>
          ${p.promStr ? `<div>四段昇段日：${p.promStr}</div>` : ''}
          ${p.currentAgeParts ? `<div>現年齢：${formatYMD(p.currentAgeParts)}</div>` : ''}
        </div>
      </article>
    `;
  }).join('');
}